openapi: 3.1.0
info:
  title: Makeup Discovery Platform API
  version: '1.0.0'
  description: |
    API documentation for the Makeup Discovery Platform.
    Provides endpoints for product discovery, virtual try-on, and personalization.

servers:
  - url: http://localhost:8000
    description: Local development server
  - url: https://api.makeup-discovery.com
    description: Production server

security:
  - BearerAuth: []

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        brand:
          type: string
        category:
          type: string
          enum:
            - Lipstick
            - Eyeshadow
            - Foundation
            - Blush
            - Mascara
            - Eyeliner
            - Concealer
            - Powder
            - Bronzer
            - Other
        description:
          type: string
        price:
          type: number
          format: float
        images:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                format: uri
              alt:
                type: string
        colors:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              hexCode:
                type: string
                pattern: '^#[0-9A-Fa-f]{6}$'
        ingredients:
          type: array
          items:
            type: string
        features:
          type: array
          items:
            type: string
        rating:
          type: number
          format: float
          minimum: 0
          maximum: 5
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/Review'

    Review:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        rating:
          type: number
          minimum: 0
          maximum: 5
        comment:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Look:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        imageUrl:
          type: string
          format: uri
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        creator:
          $ref: '#/components/schemas/User'
        tags:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time

    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
        email:
          type: string
          format: email
        profileImage:
          type: string
          format: uri
        preferences:
          type: object
          properties:
            skinType:
              type: string
              enum: [Oily, Dry, Combination, Normal, Sensitive]
            skinTone:
              type: string
            concerns:
              type: array
              items:
                type: string

paths:
  /api/products:
    get:
      summary: List products
      description: Retrieve a list of makeup products with optional filtering
      parameters:
        - name: category
          in: query
          schema:
            type: string
        - name: brand
          in: query
          schema:
            type: string
        - name: minPrice
          in: query
          schema:
            type: number
        - name: maxPrice
          in: query
          schema:
            type: number
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  total:
                    type: integer
                  page:
                    type: integer
                  pages:
                    type: integer

  /api/products/{id}:
    get:
      summary: Get product details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'

  /api/looks:
    get:
      summary: List makeup looks
      parameters:
        - name: tag
          in: query
          schema:
            type: string
        - name: creator
          in: query
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: List of looks
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Look'
                  total:
                    type: integer
                  page:
                    type: integer

  /api/virtual-try-on:
    post:
      summary: Virtual makeup try-on
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                productId:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Processed image with virtual makeup
          content:
            image/jpeg:
              schema:
                type: string
                format: binary

  /api/personalization/quiz:
    post:
      summary: Submit personalization quiz
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                skinType:
                  type: string
                  enum: [Oily, Dry, Combination, Normal, Sensitive]
                skinTone:
                  type: string
                concerns:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Personalized recommendations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
